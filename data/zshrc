###############################################################################
# 0. Prompt bootstrap & tmux attach                                           #
###############################################################################

# Automatically jump into (or create) a tmux session called “workspace”
# after the prompt preload is finished.
# TMUX - auto-start with unique sessions
if [[ -o interactive ]] && command -v tmux >/dev/null 2>&1; then
    if [[ -z "$TMUX" ]] && [[ -z "$VSCODE_INJECTION" ]]; then
        # Create unique timestamped session
        SESSION_NAME="term-$(date +%Y%m%d-%H%M%S)"
        tmux new-session -s "$SESSION_NAME" 2>/dev/null

        # After any session exits, reattach to another available session
        while [[ -z "$TMUX" ]]; do
            tmux attach-session 2>/dev/null || break
        done
    fi
fi


# Powerlevel10k Instant Prompt. Keep this as close to the top as possible.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Suppress warning if *any* plugin prints during init (recommended by P10k).
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

###############################################################################
# 1. Core shell behaviour & history                                           #
###############################################################################

# General options
setopt HIST_IGNORE_DUPS  \
       SHARE_HISTORY     \
       APPEND_HISTORY    \
       INC_APPEND_HISTORY \
       EXTENDED_HISTORY  \
       HIST_REDUCE_BLANKS \
       HIST_SAVE_NO_DUPS \
       COMPLETE_ALIASES

# History file & size
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=100000
export SAVEHIST=100000

# Flush history on every command (useful inside multiple tmux panes)
autoload -Uz add-zsh-hook
sync-history() { fc -AI; }
add-zsh-hook precmd  sync-history
add-zsh-hook preexec sync-history

###############################################################################
# 2. Key‑bindings                                                             #
###############################################################################

# Ctrl+C - properly interrupt/clear line
bindkey '^C' send-break

# Word‑wise movement with Ctrl+←/→
bindkey '^[[1;5C' forward-word   # Ctrl+Right
bindkey '^[[1;5D' backward-word  # Ctrl+Left

# Edit the current command in the editor with Ctrl‑X Ctrl‑E
autoload -Uz edit-command-line
zle -N   edit-command-line
bindkey '^X^E' edit-command-line

###############################################################################
# 3. Environment variables                                                    #
###############################################################################

export EDITOR=nano
export DOTFILES="$HOME/dotfiles"
export ARCHFLAGS="-arch x86_64"
export JAVA_HOME="/usr/lib/jvm/default"
export SPARK_HOME="/opt/apache-spark"
export HADOOP_HOME="/usr/lib/hadoop"
export HADOOP_COMMON_LIB_NATIVE_DIR="$HADOOP_HOME/lib/native"
export HADOOP_OPTS="-Djava.library.path=$HADOOP_COMMON_LIB_NATIVE_DIR"
export DOCKER_HOST="unix:///var/run/docker.sock"
export ELECTRON_OZONE_PLATFORM_HINT="wayland"

# PATH – prepend dev/tooling directories but keep $PATH fallback last
export PATH="$HOME/.rbenv/bin:$HOME/bin:/usr/local/bin:$HOME/.bin:$HOME/.toolbox/bin:$HOME/.rbenv/plugins/ruby-build/bin:$SPARK_HOME/bin:$PATH"

###############################################################################
# 4. Plugin manager & plugins                                                 #
###############################################################################

# zinit bootstrap (must exist system‑wide at /usr/share/zinit)
source /usr/share/zinit/zinit.zsh

# Prompt theme
zinit light romkatv/powerlevel10k

# --- Core UX plugins --------------------------------------------------------
zinit ice wait'1' lucid atload'_zsh_autosuggest_start'
zinit light zsh-users/zsh-autosuggestions

zinit ice wait'1' lucid
zinit light zdharma-continuum/fast-syntax-highlighting

zinit ice wait'1' lucid
zinit light zsh-users/zsh-completions

# --- Productivity helpers (silent / no prompts) ----------------------------
zinit ice wait'1' lucid from'gh-r' as'program' \
    atload'eval "$(zoxide init zsh --cmd cd)"'
zinit light ajeetdsouza/zoxide
# Now use: cd <partial-name> to jump

zinit ice wait lucid from'gh-r' as'program'
zinit light junegunn/fzf
zinit ice wait lucid
zinit snippet https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh
# Ctrl-R = fuzzy history search
# Ctrl-T = fuzzy file search
# Alt-C  = fuzzy cd

zinit ice wait'1' lucid
zinit light Aloxaf/fzf-tab

sudo-command-line() {
    [[ -z $BUFFER ]] && zle up-history
    if [[ $BUFFER == sudo\ * ]]; then
        LBUFFER="${LBUFFER#sudo }"
    else
        LBUFFER="sudo $LBUFFER"
    fi
}
zle -N sudo-command-line
bindkey "\e\e" sudo-command-line  # Press ESC twice to add/remove sudo

zinit ice wait'2' lucid
zinit light wfxr/forgit
# Adds: ga (interactive add), glo (interactive log), gd (interactive diff), etc.

###############################################################################
# 5. Completions, colours, aliases, helpers                                   #
###############################################################################

# Completion system - only rebuild cache once per day
autoload -Uz compinit
setopt EXTENDEDGLOB
for dump in ~/.zcompdump(#qN.m+1); do
  compinit
  if [[ -s "$dump" && (! -s "$dump.zwc" || "$dump" -nt "$dump.zwc") ]]; then
    zcompile "$dump"
  fi
done
unsetopt EXTENDEDGLOB
compinit -C  # -C skips security check for speed

# Better completion matching
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'  # Case insensitive
zstyle ':completion:*' menu select                       # Visual menu
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}" # Colored completion
zstyle ':completion:*' group-name ''                     # Group results
zstyle ':completion:*:descriptions' format '[%d]'        # Group descriptions

# Better directory navigation
setopt AUTO_PUSHD           # Push directories to stack automatically
setopt PUSHD_IGNORE_DUPS    # Don't duplicate in stack
setopt PUSHD_MINUS          # Use cd -<n> for stack

# Quick directory stack navigation
alias d='dirs -v'
for index ({1..9}) alias "$index"="cd +${index}"; unset index

# Colour definitions for scripts
autoload -U colors && colors

# --- Aliases ----------------------------------------------------------------
# Navigation
alias .='cd'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Modern CLI tool replacements
alias cat='bat --style=plain --paging=never'
alias ls='eza --icons --group-directories-first'
alias l='eza -lah --icons --git --group-directories-first'
alias ll='eza -lh --icons --git --group-directories-first'
alias la='eza -lah --icons --git --group-directories-first'
alias lt='eza --tree --level=2 --icons'  # Tree view
alias find='fd'
alias grep='rg'
alias du='dust'
alias df='duf'
alias top='btop'

# Git / dotfiles quick access
alias ogit='nano $GITFOLDER'
alias cgit='cd   $GITFOLDER'
alias cdot='cd   $DOTFILES'
alias odot='nano $DOTFILES'
alias cdp='cd $GITFOLDER/personal'
alias cdt='cd $GITFOLDER/third-party'

# Convenience
alias c='clear'
alias e='exit'
alias df='df -h'
alias ping='ping -c 5'
alias zshrc='nano ~/.zshrc'
alias szshrc='source ~/.zshrc'
alias grep='grep --color=auto'

# System power
alias reboot='sudo shutdown -r now'
alias shutdown='sudo shutdown -h now'
alias suspend='sudo systemctl suspend'

# Misc tooling
alias disk-usage='sudo du -h --max-depth=1 .'

# JSON helpers
alias json-file-pretty='jq .'
alias json-file-minify='jq -c .'
json-console-pretty() { echo "$1" | jq .; }
json-console-minify() { echo "$1" | jq -c .; }

# Network tweaks
alias enableipv6='sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0'
alias disableipv6='sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1'

# Git helpers
alias gaa-only-modified='git ls-files --modified | xargs git add'
alias g='git'
alias gst='git status'
alias ga='git add'
alias gaa='git add --all'
alias gcm='git commit -m'
alias gp='git push'
alias gl='git pull'

# Other utilities
alias proxy='proxychains4'
alias monitor-network='iptraf-ng'
alias disable-firewall='sudo iptables -P OUTPUT ACCEPT'
alias monitors='nwg-displays'

###############################################################################
# 6. External helpers & services                                             #
###############################################################################

# TheFuck (lazy-loaded) – only initialize when first used
if command -v thefuck >/dev/null; then
    fuck() {
        eval "$(thefuck --alias)"
        fuck "$@"
    }
fi

# ssh‑agent autostart (if no agent yet running)
if [[ -z "$SSH_AUTH_SOCK" ]] && command -v ssh-agent >/dev/null; then
  eval "$(ssh-agent -s)" >/dev/null
fi

###############################################################################
# End of file                                                                #
###############################################################################

# Powerlevel10k user configuration
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh
